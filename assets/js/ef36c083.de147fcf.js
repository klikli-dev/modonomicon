"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5400],{2976:function(e,o,t){t.r(o),t.d(o,{assets:function(){return d},contentTitle:function(){return a},default:function(){return h},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l}});var n=t(5893),r=t(1151);const i={sidebar_position:20},a="Step 2: A first look at the Demo Project",s={id:"getting-started/step-by-step-with-datagen/step2",title:"Step 2: A first look at the Demo Project",description:"Demo Project File Structure",source:"@site/docs/getting-started/step-by-step-with-datagen/step2.md",sourceDirName:"getting-started/step-by-step-with-datagen",slug:"/getting-started/step-by-step-with-datagen/step2",permalink:"/modonomicon/docs/getting-started/step-by-step-with-datagen/step2",draft:!1,unlisted:!1,editUrl:"https://github.com/klikli-dev/modonomicon/tree/documentation/docs/getting-started/step-by-step-with-datagen/step2.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Step 1: Setting up the Demo Project",permalink:"/modonomicon/docs/getting-started/step-by-step-with-datagen/step1"},next:{title:"Step 3: Creating the Book",permalink:"/modonomicon/docs/getting-started/step-by-step-with-datagen/step3"}},d={},l=[{value:"Demo Project File Structure",id:"demo-project-file-structure",level:2},{value:"Interlude for Mod developers: Copying relevant files",id:"interlude-for-mod-developers-copying-relevant-files",level:2},{value:"A closer look at the existing files",id:"a-closer-look-at-the-existing-files",level:2},{value:"ModonomiconDemoBook.java",id:"modonomicondemobookjava",level:3},{value:"DataGenerators.java",id:"datageneratorsjava",level:3},{value:"DemoBookProvider.java",id:"demobookproviderjava",level:3},{value:"EnUsProvider.java",id:"enusproviderjava",level:3},{value:"Optional: Additional Languages",id:"optional-additional-languages",level:4}];function c(e){const o={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"step-2-a-first-look-at-the-demo-project",children:"Step 2: A first look at the Demo Project"}),"\n",(0,n.jsx)(o.h2,{id:"demo-project-file-structure",children:"Demo Project File Structure"}),"\n",(0,n.jsxs)(o.p,{children:["First, take a minute to look at the folder structure of the test project.\nThe most intersting parts are in the ",(0,n.jsx)(o.code,{children:"/src/"})," folder, you can ignore the other folders and files for now."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"src\n+---generated\n|   \\---resources\n+---main\n|   +---java\n|   |   \\---com\n|   |       \\---klikli_dev\n|   |           \\---modonomicon_demo_book\n|   |               |   ModonomiconDemoBook.java\n|   |               |\n|   |               \\---datagen\n|   |                   |   DataGenerators.java\n|   |                   |   DemoBookProvider.java\n|   |                   |\n|   |                   \\---lang\n|   |                           EnUsProvider.java\n|   |\n|   \\---resources\n|       |   modonomicon.png\n|       |   pack.mcmeta\n|       |\n|       \\---META-INF\n|               mods.toml\n"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"/main/java/"})," contains the source code files used to generate the book."]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"/generated/"})," contains the generated files."]}),"\n"]}),"\n",(0,n.jsx)(o.h2,{id:"interlude-for-mod-developers-copying-relevant-files",children:"Interlude for Mod developers: Copying relevant files"}),"\n",(0,n.jsxs)(o.p,{children:["At this point it might be a good idea to copy the ",(0,n.jsx)(o.code,{children:"/datagen/"})," folder and all contents into your mod.\nYou should skip ModonomiconDemoBook.java, it is the main mod class for the demo project, you should have your own main mod class."]}),"\n",(0,n.jsx)(o.h2,{id:"a-closer-look-at-the-existing-files",children:"A closer look at the existing files"}),"\n",(0,n.jsx)(o.h3,{id:"modonomicondemobookjava",children:"ModonomiconDemoBook.java"}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsx)(o.p,{children:"Modpack creators can and should skip this step."})}),"\n",(0,n.jsxs)(o.p,{children:["Interesting is only the line ",(0,n.jsx)(o.code,{children:"modEventBus.addListener(DataGenerators::gatherData);"}),": It registers our DataGenerator to run in Forge's GatherData event. Make sure to include it in your main mod class."]}),"\n",(0,n.jsx)(o.h3,{id:"datageneratorsjava",children:"DataGenerators.java"}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsx)(o.p,{children:"Modpack creators can and should skip this step."})}),"\n",(0,n.jsxs)(o.p,{children:["This file registers the two Data Generators from the Demo Project - one that will generate the book, and one that will create the corresponding ",(0,n.jsx)(o.code,{children:"/lang/*.json"})," file. You may want to add more generators for other mod content here in the future."]}),"\n",(0,n.jsx)(o.h3,{id:"demobookproviderjava",children:"DemoBookProvider.java"}),"\n",(0,n.jsx)(o.p,{children:"In this file we will add instructions that will generate our book content, such as calls to category providers, which in turn will create entries and pages.\nAdditionally it holds a reference to the language providers to also easily add the actual book texts."}),"\n",(0,n.jsx)(o.p,{children:"For now this file is mostly empty - that's OK!"}),"\n",(0,n.jsx)(o.h3,{id:"enusproviderjava",children:"EnUsProvider.java"}),"\n",(0,n.jsxs)(o.p,{children:['"EnUS" corresponds to the "en_us" in the line ',(0,n.jsx)(o.code,{children:'super(generator, modid, "en_us");'})," in the upper region of the file.\nThis is the language code for the English language, meaning in this file we will generate English texts."]}),"\n",(0,n.jsx)(o.h4,{id:"optional-additional-languages",children:"Optional: Additional Languages"}),"\n",(0,n.jsx)(o.p,{children:'The Demo Book comes with a language provider for Spanish (although only small parts of the demo book are translated to Spanish!).\nIf you want to provide translations for other languages, you can copy and rename the file, and change the language code to e.g. "fr_fr" for French.'}),"\n",(0,n.jsx)(o.p,{children:'In Java the "class" name and file name must correspond. Thus, a hypothethical file FrFrProvider would have to look something like this:'}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-java",children:'public class FrFrProvider extends LanguageProvider {\n   public FrFrProvider(DataGenerator generator, String modid) {\n        super(generator, modid, "fr_fr");\n    }\n}\n'})}),"\n",(0,n.jsxs)(o.admonition,{type:"tip",children:[(0,n.jsx)(o.p,{children:"If you do create an additional language - make sure to register it in the DataGenerators.java file as well!"}),(0,n.jsx)(o.p,{children:"e.g. for frFr Provider modify it to look like this:"}),(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-java",children:'\nvar enUsProvider = new EnUsProvider(generator.getPackOutput(), ModonomiconDemoBook.MODID);\nvar esEsProvider = new EsEsProvider(generator.getPackOutput(), ModonomiconDemoBook.MODID);\nvar frFrProvider = new EsEsProvider(generator.getPackOutput(), ModonomiconDemoBook.MODID);\n\ngenerator.addProvider(event.includeServer(), new DemoBookProvider(generator.getPackOutput(), ModonomiconDemoBook.MODID,\n        enUsProvider, //first add the default language, will be accessed via .lang()\n        esEsProvider, //then all other languages, will be accessed via .lang("<lang code>"), for example .lang("es_es")\n        frFrProvider\n));\n\n//Important: Lang providers need to be added after the book provider to process the texts added by the book provider\ngenerator.addProvider(event.includeClient(), enUsProvider);\ngenerator.addProvider(event.includeClient(), esEsProvider);\ngenerator.addProvider(event.includeClient(), frFrProvider);\n\n'})})]})]})}function h(e={}){const{wrapper:o}={...(0,r.a)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:function(e,o,t){t.d(o,{Z:function(){return s},a:function(){return a}});var n=t(7294);const r={},i=n.createContext(r);function a(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:o},e.children)}}}]);